<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Bash Environment On Windows]]></title>
      <url>http://harveyhuang.github.io/2017/05/11/Bash-Environment-On-Windows/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Abstract<br>图片测试</p>
</blockquote>
<p><excerpt in="" index=""><br><a id="more"></a></excerpt></p>
<p>[toc]</p>
<p><img src="/2017/05/11/Bash-Environment-On-Windows/IMG_1758.JPG" alt="青春" title="青春"></p>
<h2 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h2><ul>
<li><p>安装<br>windows 高版本python一般都自带pip，如果没有的话去Python的<a href="https://pypi.python.org/pypi/pip#downloads" target="_blank" rel="external">官网下载</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 解压后，进入该目录执行</div><div class="line">python setup.py install</div><div class="line"></div><div class="line"># linux安装</div><div class="line">sudo apt-get intall pip</div></pre></td></tr></table></figure>
</li>
<li><p>源配置</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"># Windows源配置</div><div class="line">1. 在C:\Users\Harvey目录下创建pip文件夹</div><div class="line">2. 新建pip.in文件</div><div class="line"></div><div class="line"># Linux源配置</div><div class="line">1. /home/harvey/目录下创建.pip文件夹</div><div class="line">2. 新建pip.conf</div><div class="line"></div><div class="line"># pip.conf&amp;pip.ini内容</div><div class="line">[global]</div><div class="line">timeout = 60</div><div class="line">index-url = http://pypi.douban.com/simple</div><div class="line">trusted-host = pypi.douban.com</div></pre></td></tr></table></figure>
<h2 id="virtualenv"><a href="#virtualenv" class="headerlink" title="virtualenv"></a>virtualenv</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">pip install virtualenv</div><div class="line"></div><div class="line"># 新建一个名字为 venv_name 的虚拟环境，并不拷入系统已经安装好的包</div><div class="line">virtualenv --no-site-packages venv_name -p python_version.exe</div><div class="line"># windows</div><div class="line">source venv_name/Scripts/activate</div><div class="line"></div><div class="line">which pip #查看是否引用虚拟环境下pip</div><div class="line">which python #查看是否引用虚拟环境下python版本</div><div class="line">pip -l # 查看安装了那些包</div><div class="line">pip install package_name  [-update]#安装第三方库</div><div class="line">pip download package_name &gt;= | == version_number</div></pre></td></tr></table></figure>
<h2 id="bash配置"><a href="#bash配置" class="headerlink" title="bash配置"></a>bash配置</h2><ul>
<li><a href="Bash-Environment-On-Windows/.bashrc">.bashrc</a></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env bash</div><div class="line"></div><div class="line">export APP_HOME=/d/Program\ Files/</div><div class="line"># some more ls aliases</div><div class="line">alias ll=&apos;ls -alF&apos;    </div><div class="line">alias la=&apos;ls -A&apos;      </div><div class="line">alias l=&apos;ls -CF&apos;     </div><div class="line"># enable color support of ls and also add handy aliases                                    </div><div class="line">if [ -x /usr/bin/dircolors ]; then                                                         </div><div class="line">	test -r ~/.dircolors &amp;&amp; eval &quot;$(dircolors -b ~/.dircolors)&quot; || eval &quot;$(dircolors -b)&quot;  </div><div class="line">	alias ls=&apos;ls --color=auto&apos;                                                             </div><div class="line">	#alias dir=&apos;dir --color=auto&apos;                                                          </div><div class="line">	#alias vdir=&apos;vdir --color=auto&apos;                                                        </div><div class="line"></div><div class="line">	alias grep=&apos;grep --color=auto&apos;                                                         </div><div class="line">	alias fgrep=&apos;fgrep --color=auto&apos;                                                       </div><div class="line">	alias egrep=&apos;egrep --color=auto&apos;                                                       </div><div class="line">fi           </div><div class="line"></div><div class="line"># source ~/.colors.theme.bash</div><div class="line">PS1=&quot;\e[35;40m\t\e[33;40m \u@\h \e[0m☆ \e[34;40m\w\n\e[36;40m➣ \e[0m&quot;</div><div class="line"># PS1=&quot;\e[37;40m\][\[\e[32;40m\]\u\[\e[37;40m\]@\h \[\e[36;40m\]\w\[\e[0m\]\\$ &quot;</div></pre></td></tr></table></figure>
<ul>
<li>.inputrc</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">set completion-ignore-case on</div><div class="line"></div><div class="line">&quot;\e[A&quot;: history-search-backward</div><div class="line">&quot;\e[B&quot;: history-search-forward</div><div class="line">&quot;\e[1~&quot;: beginning-of-line</div><div class="line">&quot;\e[4~&quot;: end-of-line</div><div class="line">&quot;\e[5~&quot;: beginning-of-history</div><div class="line">&quot;\e[6~&quot;: end-of-history</div><div class="line">&quot;\e[3~&quot;: delete-char</div><div class="line">&quot;\e[2~&quot;: quoted-insert</div><div class="line">&quot;\e[5C&quot;: forward-word</div><div class="line">&quot;\e[5D&quot;: backward-word</div><div class="line">&quot;\e[1;5C&quot;: forward-word</div><div class="line">&quot;\e[1;5D&quot;: backward-word</div></pre></td></tr></table></figure>
<ul>
<li>.vimrc</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div></pre></td><td class="code"><pre><div class="line">map &lt;F9&gt; :call SaveInputData()&lt;CR&gt;</div><div class="line"></div><div class="line">func! SaveInputData()</div><div class="line">	exec &quot;tabnew&quot;</div><div class="line">	exec &apos;normal &quot;+gP&apos;</div><div class="line">	exec &quot;w! /tmp/input_data&quot;</div><div class="line">endfunc</div><div class="line"></div><div class="line"></div><div class="line">&quot;colorscheme torte</div><div class="line">&quot;colorscheme murphy</div><div class="line">&quot;colorscheme desert </div><div class="line">&quot;colorscheme desert </div><div class="line">&quot;colorscheme elflord</div><div class="line">colorscheme ron</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">&quot;set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936</div><div class="line">&quot;set termencoding=utf-8</div><div class="line">&quot;set encoding=utf-8</div><div class="line">&quot;set fileencodings=ucs-bom,utf-8,cp936</div><div class="line">&quot;set fileencoding=utf-8</div><div class="line"></div><div class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</div><div class="line">&quot; 显示相关  </div><div class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</div><div class="line">set shortmess=atI   &quot; 启动的时候不显示那个援助乌干达儿童的提示  </div><div class="line">&quot;winpos 5 5          &quot; 设定窗口位置  </div><div class="line">&quot;set lines=40 columns=155    &quot; 设定窗口大小  </div><div class="line">set go=             &quot; 不要图形按钮  </div><div class="line">&quot;color asmanian2     &quot; 设置背景主题  </div><div class="line">&quot;set guifont=Courier_New:h10:cANSI   &quot; 设置字体  </div><div class="line">&quot;syntax on           &quot; 语法高亮  </div><div class="line">autocmd InsertLeave * se nocul  &quot; 用浅色高亮当前行  </div><div class="line">autocmd InsertEnter * se cul    &quot; 用浅色高亮当前行  </div><div class="line">&quot;set ruler           &quot; 显示标尺  </div><div class="line">set showcmd         &quot; 输入的命令显示出来，看的清楚些  </div><div class="line">&quot;set cmdheight=1     &quot; 命令行（在状态行下）的高度，设置为1  </div><div class="line">&quot;set whichwrap+=&lt;,&gt;,h,l   &quot; 允许backspace和光标键跨越行边界(不建议)  </div><div class="line">&quot;set scrolloff=3     &quot; 光标移动到buffer的顶部和底部时保持3行距离  </div><div class="line">set novisualbell    &quot; 不要闪烁(不明白)  </div><div class="line">set statusline=%F%m%r%h%w\ [FORMAT=%&#123;&amp;ff&#125;]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %&#123;strftime(\&quot;%d/%m/%y\ -\ %H:%M\&quot;)&#125;   &quot;状态行显示的内容  </div><div class="line">set laststatus=1    &quot; 启动显示状态行(1),总是显示状态行(2)  </div><div class="line">set foldenable      &quot; 允许折叠  </div><div class="line">set foldmethod=manual   &quot; 手动折叠  </div><div class="line">&quot;set background=dark &quot;背景使用黑色 </div><div class="line">set nocompatible  &quot;去掉讨厌的有关vi一致性模式，避免以前版本的一些bug和局限  </div><div class="line">&quot; 显示中文帮助</div><div class="line">if version &gt;= 603</div><div class="line">	set helplang=cn</div><div class="line">	set encoding=utf-8</div><div class="line">endif</div><div class="line">&quot; 设置配色方案</div><div class="line">&quot;colorscheme murphy</div><div class="line">&quot;字体 </div><div class="line">&quot;if (has(&quot;gui_running&quot;)) </div><div class="line">&quot;   set guifont=Bitstream\ Vera\ Sans\ Mono\ 10 </div><div class="line">&quot;endif </div><div class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</div><div class="line">&quot;&quot;&quot;&quot;&quot;新文件标题</div><div class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</div><div class="line">&quot;新建.c,.h,.sh,.java文件，自动插入文件头 </div><div class="line">autocmd BufNewFile *.cpp,*.[ch],*.sh,*.java exec &quot;:call SetTitle()&quot; </div><div class="line">&quot;&quot;定义函数SetTitle，自动插入文件头 </div><div class="line">func SetTitle() </div><div class="line">	&quot;如果文件类型为.sh文件 </div><div class="line">	if &amp;filetype == &apos;sh&apos; </div><div class="line">		call setline(1,&quot;\#########################################################################&quot;) </div><div class="line">		call append(line(&quot;.&quot;), &quot;\# File Name: &quot;.expand(&quot;%&quot;)) </div><div class="line">		call append(line(&quot;.&quot;)+1, &quot;\# Author: harvey&quot;) </div><div class="line">		call append(line(&quot;.&quot;)+2, &quot;\# mail: sa615341@mail.ustc.edu.cn&quot;) </div><div class="line">		call append(line(&quot;.&quot;)+3, &quot;\# Created Time: &quot;.strftime(&quot;%c&quot;)) </div><div class="line">		call append(line(&quot;.&quot;)+4, &quot;\#########################################################################&quot;) </div><div class="line">		call append(line(&quot;.&quot;)+5, &quot;\#!/bin/bash&quot;) </div><div class="line">		call append(line(&quot;.&quot;)+6, &quot;&quot;) </div><div class="line">	else </div><div class="line">		call setline(1, &quot;/*************************************************************************&quot;) </div><div class="line">		call append(line(&quot;.&quot;), &quot;	&gt; File Name: &quot;.expand(&quot;%&quot;)) </div><div class="line">		call append(line(&quot;.&quot;)+1, &quot;	&gt; Author: harvey&quot;) </div><div class="line">		call append(line(&quot;.&quot;)+2, &quot;	&gt; Mail: sa615341@mail.ustc.edu.cn&quot;) </div><div class="line">		call append(line(&quot;.&quot;)+3, &quot;	&gt; Created Time: &quot;.strftime(&quot;%c&quot;)) </div><div class="line">		call append(line(&quot;.&quot;)+4, &quot; ************************************************************************/&quot;) </div><div class="line">		call append(line(&quot;.&quot;)+5, &quot;&quot;)</div><div class="line">	endif</div><div class="line">	if &amp;filetype == &apos;cpp&apos;</div><div class="line">		call append(line(&quot;.&quot;)+6, &quot;#include &lt;iostream&gt;&quot;)</div><div class="line">		call append(line(&quot;.&quot;)+7, &quot;using namespace std;&quot;)</div><div class="line">		call append(line(&quot;.&quot;)+8, &quot;&quot;)</div><div class="line">	endif</div><div class="line">	if &amp;filetype == &apos;c&apos;</div><div class="line">		call append(line(&quot;.&quot;)+6, &quot;#include &lt;stdio.h&gt;&quot;)</div><div class="line">		call append(line(&quot;.&quot;)+7, &quot;&quot;)</div><div class="line">	endif</div><div class="line">	&quot;	if &amp;filetype == &apos;java&apos;</div><div class="line">	&quot;		call append(line(&quot;.&quot;)+6,&quot;public class &quot;.expand(&quot;%&quot;))</div><div class="line">	&quot;		call append(line(&quot;.&quot;)+7,&quot;&quot;)</div><div class="line">	&quot;	endif</div><div class="line">	&quot;新建文件后，自动定位到文件末尾</div><div class="line">	autocmd BufNewFile * normal G</div><div class="line">endfunc </div><div class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</div><div class="line">&quot;键盘命令</div><div class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</div><div class="line"></div><div class="line">nmap &lt;leader&gt;w :w!&lt;cr&gt;</div><div class="line">nmap &lt;leader&gt;f :find&lt;cr&gt;</div><div class="line"></div><div class="line">&quot; 映射全选+复制 ctrl+a</div><div class="line">map &lt;C-A&gt; ggVGY</div><div class="line">map! &lt;C-A&gt; &lt;Esc&gt;ggVGY</div><div class="line">map &lt;F12&gt; gg=G</div><div class="line">&quot; 选中状态下 Ctrl+c 复制</div><div class="line">vmap &lt;C-c&gt; &quot;+y</div><div class="line">&quot;去空行  </div><div class="line">nnoremap &lt;F2&gt; :g/^\s*$/d&lt;CR&gt; </div><div class="line">&quot;比较文件  </div><div class="line">nnoremap &lt;C-F2&gt; :vert diffsplit </div><div class="line">&quot;新建标签  </div><div class="line">map &lt;M-F2&gt; :tabnew&lt;CR&gt;  </div><div class="line">&quot;列出当前目录文件  </div><div class="line">map &lt;F3&gt; :tabnew .&lt;CR&gt;  </div><div class="line">&quot;打开树状文件目录  </div><div class="line">map &lt;C-F3&gt; \be  </div><div class="line">&quot;C，C++ 按F5编译运行</div><div class="line">map &lt;F5&gt; :call CompileRunGcc()&lt;CR&gt;</div><div class="line">func! CompileRunGcc()</div><div class="line">	exec &quot;w&quot;</div><div class="line">	if &amp;filetype == &apos;c&apos;</div><div class="line">		exec &quot;!g++ % -o %&lt;&quot;</div><div class="line">		exec &quot;! ./%&lt;&quot;</div><div class="line">	elseif &amp;filetype == &apos;cpp&apos;</div><div class="line">		exec &quot;!g++ % -o %&lt;&quot;</div><div class="line">		exec &quot;! ./%&lt;&quot;</div><div class="line">	elseif &amp;filetype == &apos;java&apos; </div><div class="line">		exec &quot;!javac %&quot; </div><div class="line">		exec &quot;!java %&lt;&quot;</div><div class="line">	elseif &amp;filetype == &apos;sh&apos;</div><div class="line">		:!./%</div><div class="line">	elseif &amp;filetype == &apos;py&apos;</div><div class="line">		exec &quot;!python %&quot;</div><div class="line">		exec &quot;!python %&lt;&quot;</div><div class="line">	endif</div><div class="line">endfunc</div><div class="line">&quot;C,C++的调试</div><div class="line">map &lt;F8&gt; :call Rungdb()&lt;CR&gt;</div><div class="line">func! Rungdb()</div><div class="line">	exec &quot;w&quot;</div><div class="line">	exec &quot;!g++ % -g -o %&lt;&quot;</div><div class="line">	exec &quot;!gdb ./%&lt;&quot;</div><div class="line">endfunc</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</div><div class="line">&quot;&quot;实用设置</div><div class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</div><div class="line">&quot; 设置当文件被改动时自动载入</div><div class="line">set autoread</div><div class="line">&quot; quickfix模式</div><div class="line">autocmd FileType c,cpp map &lt;buffer&gt; &lt;leader&gt;&lt;space&gt; :w&lt;cr&gt;:make&lt;cr&gt;</div><div class="line">&quot;代码补全 </div><div class="line">set completeopt=preview,menu </div><div class="line">&quot;允许插件  </div><div class="line">filetype plugin on</div><div class="line">&quot;共享剪贴板  </div><div class="line">set clipboard+=unnamed </div><div class="line">&quot;从不备份  </div><div class="line">set nobackup</div><div class="line">&quot;make 运行</div><div class="line">:set makeprg=g++\ -Wall\ \ %</div><div class="line">&quot;自动保存</div><div class="line">set autowrite</div><div class="line">set ruler                   &quot; 打开状态栏标尺</div><div class="line">set cursorline              &quot; 突出显示当前行</div><div class="line">set magic                   &quot; 设置魔术</div><div class="line">set guioptions=T           &quot; 隐藏工具栏</div><div class="line">set guioptions-=m           &quot; 隐藏菜单栏</div><div class="line">&quot;set statusline=\ %&lt;%F[%1*%M%*%n%R%H]%=\ %y\ %0(%&#123;&amp;fileformat&#125;\ %&#123;&amp;encoding&#125;\ %c:%l/%L%)\</div><div class="line">&quot; 设置在状态行显示的信息</div><div class="line">set foldcolumn=0</div><div class="line">set foldmethod=indent </div><div class="line">set foldlevel=3 </div><div class="line">set foldenable              &quot; 开始折叠</div><div class="line">&quot; 不要使用vi的键盘模式，而是vim自己的</div><div class="line">set nocompatible</div><div class="line">&quot; 语法高亮</div><div class="line">set syntax=on</div><div class="line">&quot; 去掉输入错误的提示声音</div><div class="line">set noeb</div><div class="line">&quot; 在处理未保存或只读文件的时候，弹出确认</div><div class="line">set confirm</div><div class="line">&quot; 自动缩进</div><div class="line">set autoindent</div><div class="line">set cindent</div><div class="line">&quot; Tab键的宽度</div><div class="line">set tabstop=4</div><div class="line">&quot; 统一缩进为4</div><div class="line">set softtabstop=4</div><div class="line">set shiftwidth=4</div><div class="line">&quot; 不要用空格代替制表符</div><div class="line">set noexpandtab</div><div class="line">&quot; 在行和段开始处使用制表符</div><div class="line">set smarttab</div><div class="line">&quot; 显示行号</div><div class="line">set number</div><div class="line">&quot; 历史记录数</div><div class="line">set history=1000</div><div class="line">&quot;禁止生成临时文件</div><div class="line">set nobackup</div><div class="line">set noswapfile</div><div class="line">&quot;搜索忽略大小写</div><div class="line">set ignorecase</div><div class="line">&quot;搜索逐字符高亮</div><div class="line">set hlsearch</div><div class="line">set incsearch</div><div class="line">&quot;行内替换</div><div class="line">set gdefault</div><div class="line">&quot;编码设置</div><div class="line">set enc=utf-8</div><div class="line">set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936</div><div class="line">&quot;语言设置</div><div class="line">set langmenu=zh_CN.UTF-8</div><div class="line">set helplang=cn</div><div class="line">&quot; 我的状态行显示的内容（包括文件类型和解码）</div><div class="line">&quot;set statusline=%F%m%r%h%w\ [FORMAT=%&#123;&amp;ff&#125;]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %&#123;strftime(\&quot;%d/%m/%y\ -\ %H:%M\&quot;)&#125;</div><div class="line">&quot;set statusline=[%F]%y%r%m%*%=[Line:%l/%L,Column:%c][%p%%]</div><div class="line">&quot; 总是显示状态行</div><div class="line">set laststatus=2</div><div class="line">&quot; 命令行（在状态行下）的高度，默认为1，这里是2</div><div class="line">set cmdheight=2</div><div class="line">&quot; 侦测文件类型</div><div class="line">filetype on</div><div class="line">&quot; 载入文件类型插件</div><div class="line">filetype plugin on</div><div class="line">&quot; 为特定文件类型载入相关缩进文件</div><div class="line">filetype indent on</div><div class="line">&quot; 保存全局变量</div><div class="line">set viminfo+=!</div><div class="line">&quot; 带有如下符号的单词不要被换行分割</div><div class="line">set iskeyword+=_,$,@,%,#,-</div><div class="line">&quot; 字符间插入的像素行数目</div><div class="line">set linespace=0</div><div class="line">&quot; 增强模式中的命令行自动完成操作</div><div class="line">set wildmenu</div><div class="line">&quot; 使回格键（backspace）正常处理indent, eol, start等</div><div class="line">set backspace=2</div><div class="line">&quot; 允许backspace和光标键跨越行边界</div><div class="line">set whichwrap+=&lt;,&gt;,h,l</div><div class="line">&quot; 可以在buffer的任何地方使用鼠标（类似office中在工作区双击鼠标定位）</div><div class="line">set mouse=a</div><div class="line">set selection=exclusive</div><div class="line">set selectmode=mouse,key</div><div class="line">&quot; 通过使用: commands命令，告诉我们文件的哪一行被改变过</div><div class="line">set report=0</div><div class="line">&quot; 在被分割的窗口间显示空白，便于阅读</div><div class="line">set fillchars=vert:\ ,stl:\ ,stlnc:\</div><div class="line">&quot; 高亮显示匹配的括号</div><div class="line">set showmatch</div><div class="line">&quot; 匹配括号高亮的时间（单位是十分之一秒）</div><div class="line">set matchtime=1</div><div class="line">&quot; 光标移动到buffer的顶部和底部时保持3行距离</div><div class="line">set scrolloff=3</div><div class="line">&quot; 为C程序提供自动缩进</div><div class="line">set smartindent</div><div class="line">&quot; 高亮显示普通txt文件（需要txt.vim脚本）</div><div class="line">au BufRead,BufNewFile *  setfiletype txt</div><div class="line">&quot;自动补全</div><div class="line">:inoremap ( ()&lt;ESC&gt;i</div><div class="line">:inoremap ) &lt;c-r&gt;=ClosePair(&apos;)&apos;)&lt;CR&gt;</div><div class="line">&quot;:inoremap &#123; &#123;&lt;CR&gt;&#125;&lt;ESC&gt;O</div><div class="line">&quot;:inoremap &#125; &lt;c-r&gt;=ClosePair(&apos;&#125;&apos;)&lt;CR&gt;</div><div class="line">:inoremap [ []&lt;ESC&gt;i</div><div class="line">:inoremap ] &lt;c-r&gt;=ClosePair(&apos;]&apos;)&lt;CR&gt;</div><div class="line">:inoremap &quot; &quot;&quot;&lt;ESC&gt;i</div><div class="line">:inoremap &apos; &apos;&apos;&lt;ESC&gt;i</div><div class="line">function! ClosePair(char)</div><div class="line">	if getline(&apos;.&apos;)[col(&apos;.&apos;) - 1] == a:char</div><div class="line">		return &quot;\&lt;Right&gt;&quot;</div><div class="line">	else</div><div class="line">		return a:char</div><div class="line">	endif</div><div class="line">endfunction</div><div class="line">filetype plugin indent on </div><div class="line">&quot;打开文件类型检测, 加了这句才可以用智能补全</div><div class="line">set completeopt=longest,menu</div><div class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">&quot;NERDtee设定</div><div class="line">let NERDChristmasTree=1</div><div class="line">let NERDTreeAutoCenter=1</div><div class="line">let NERDTreeBookmarksFile=$VIM.&apos;\Data\NerdBookmarks.txt&apos;</div><div class="line">let NERDTreeMouseMode=2</div><div class="line">let NERDTreeShowBookmarks=1</div><div class="line">let NERDTreeShowFiles=1</div><div class="line">let NERDTreeShowHidden=1</div><div class="line">let NERDTreeShowLineNumbers=1</div><div class="line">let NERDTreeWinPos=&apos;left&apos;</div><div class="line">let NERDTreeWinSize=31</div><div class="line">nnoremap f :NERDTreeToggle</div><div class="line">map &lt;F7&gt; :NERDTree&lt;CR&gt;</div></pre></td></tr></table></figure>
<h2 id="ssh-scp免密码登陆"><a href="#ssh-scp免密码登陆" class="headerlink" title="ssh/scp免密码登陆"></a>ssh/scp免密码登陆</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa</div><div class="line"># 由于免密码，密码置为空</div><div class="line">scp .ssh/id_rsa.pub harvey@192.168.12.128:/home/harvey.ssh/authorized_keys</div></pre></td></tr></table></figure>
<p><strong>ATTENTION</strong><br>在Linux上各目录的权限为，注意不要轻易给others写权限即可</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">drwxrwxr-x  2 harvey harvey 4096 May  7 17:52 ./(/home/harvey/.ssh 775)</div><div class="line">drwxr-xr-x 27 harvey harvey 4096 May  7 22:46 ../(/home/harvey 755)</div><div class="line">-rw-r--r--  1 harvey harvey  400 May  7 17:51 authorized_keys (644)</div></pre></td></tr></table></figure>
<p><img src="/2017/05/11/Bash-Environment-On-Windows/1494509838415.jpg" alt="实现效果" title="实效果"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python Snacks]]></title>
      <url>http://harveyhuang.github.io/2017/04/04/Python%20Snacks/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Abstract</p>
</blockquote>
<p><excerpt in="" index=""><br><a id="more"></a></excerpt></p>
<p>[toc]</p>
<h1 id="刷题专用"><a href="#刷题专用" class="headerlink" title="刷题专用"></a>刷题专用</h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Pycharm使用]]></title>
      <url>http://harveyhuang.github.io/2017/04/04/Pycharm%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Abstract</p>
</blockquote>
<p><excerpt in="" index=""><br><a id="more"></a></excerpt></p>
<h1 id="安装和破解"><a href="#安装和破解" class="headerlink" title="安装和破解"></a>安装和破解</h1><h1 id="远程调试"><a href="#远程调试" class="headerlink" title="远程调试"></a>远程调试</h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[OpenStack Installation Instruction]]></title>
      <url>http://harveyhuang.github.io/2017/03/25/OpenStack-Installation-Instruction/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Abstract<br>记录自己在装OpenStack时遇到的坑<br>主流程参照<a href="http://www.chenshake.com/devstack-installation-and-testing/" target="_blank" rel="external">陈沙克老师的博客</a>和<a href="https://docs.openstack.org/developer/devstack/" target="_blank" rel="external">DevStack官网</a>，主要参考陈沙克老师的==local.conf== 文件，修改了其中主机IP，固定IP等看完了OpenStack Configuration那部分的文档，之后再做修改，预计与创建的实例连接外网有关。<br>尽管官网介绍的步骤非常简单，但是自己配置各种出错，按照博客中的原话，多执行脚本几次错误就过去了(网络问题)。</p>
</blockquote>
<p><excerpt in="" index=""><br><a id="more"></a></excerpt></p>
<p>[toc]</p>
<h3 id="VMware-网络配置"><a href="#VMware-网络配置" class="headerlink" title="VMware 网络配置"></a>VMware 网络配置</h3><p><a href="http://blog.csdn.net/clevercode/article/details/45934233" target="_blank" rel="external">VMware三种网络模式讲解</a><br><a href="http://www.2cto.com/os/201404/292853.html" target="_blank" rel="external">Ubuntu网络配置讲解</a><br>配置信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">VMware：12.0 pro</div><div class="line">Windows：Win10</div><div class="line">Ubuntu：14.04(推荐)</div><div class="line"></div><div class="line">Windows </div><div class="line">IP：192.168.1.108</div><div class="line">GW：192.168.1.1</div><div class="line"></div><div class="line">VMware</div><div class="line">- NAT Mode：利用主机的IP联网，有自己的网段，可配置</div><div class="line">IP：192.168.12.132</div><div class="line">GW：192.168.12.2</div><div class="line">MASK：255.255.255.0</div><div class="line"></div><div class="line"></div><div class="line">-Bridge Mode：和Windows的IP在同一网段，这和windows 路由器配置有关</div><div class="line">IP：192.168.1.x</div><div class="line">GW：192.168.1.1</div><div class="line">MASK：255.255.255.0</div></pre></td></tr></table></figure></p>
<p>NAT模式在使用ssh连接时不容易掉线，而桥接模式容易被挤掉，出现==Connection closed by foreign host.== 错误。<br>在Windows下可以使用<code>ipconfig</code>查看ip设置，使用<code>arp -a</code>查看与虚拟机是否建立了连接，使用之前最好刷新一下虚拟机的网络，比如在虚拟机中上下网什么的。<br>在虚拟机Ubuntu中可以编辑 ==/etc/network/interfaces== 文件</p>
<h3 id="VMware虚拟机配置"><a href="#VMware虚拟机配置" class="headerlink" title="VMware虚拟机配置"></a>VMware虚拟机配置</h3><ul>
<li>需要配置多核且能虚拟化<br>虚拟机网络配置，VMware默认是NAT模式配地址，默认网关是<code>192.168.x.2</code><br>如果虚拟机没有自动连接网络，需点击一下<code>Auto Ethernet</code>，或者自己编辑网络地址</li>
</ul>
<h3 id="准备事项和错误"><a href="#准备事项和错误" class="headerlink" title="准备事项和错误"></a>准备事项和错误</h3><ul>
<li><p><a href="http://blog.csdn.net/enoch612/article/details/52599726" target="_blank" rel="external">同步网络时间的方法</a><br>博客中关于同步时间的指令，不能执行，我参考了网上的。</p>
</li>
<li><p><a href="http://blog.csdn.net/my_renzhibo/article/details/7616711" target="_blank" rel="external">修改/etc/sudoers文件</a><br>使得==harvey==用户和==stack==使用<code>sudo</code>命令可以不用输入密码</p>
</li>
<li><p>HASH和不匹配问题</p>
</li>
</ul>
<p><img src="/2017/03/25/OpenStack-Installation-Instruction/1490436165621.jpg" alt="HASH和不匹配问题" title="HASH和不匹配"><br><code>vi /etc/apt/source.list</code>注释掉无法解析的<code>extras</code>源，顺便说明一下，这个问题是通过Ubuntu 图形化界面选择源的，所以保留一些国外的源，就会产生问题，如果是国内的镜像出现这种问题，可以通过修改访问方式<code>https</code>或者修改<code>/etc/resolv.conf</code>文件中<code>namesever</code>为源相应的域名(没有亲测)</p>
<ul>
<li>安装过程中碰到从<code>https://pypi.python.org/</code>中下载<code>wheel</code>文件过慢的问题<ul>
<li>可以参考<a href="http://www.cnblogs.com/microman/p/6107879.html" target="_blank" rel="external">加快从pipy中下载的速度</a></li>
<li>也可以通过<code>wget</code>在<a href="http://pypi.douban.com/simple/" target="_blank" rel="external">pypi网站</a>命令提前下载好</li>
<li>也可以直接在<a href="http://pypi.douban.com/simple/" target="_blank" rel="external">pypi网站</a></li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#添加豆瓣源，直接复制一下内容即可</div><div class="line">mkdir ~/.pip</div><div class="line">cat &gt; ~/.pip/pip.conf &lt;&lt;EOF</div><div class="line">[global]</div><div class="line">index-url = http://pypi.douban.com/simple/</div><div class="line">trusted-host = pypi.douban.com</div><div class="line">EOF</div></pre></td></tr></table></figure>
<ul>
<li><p>通过<code>sudo find / -regex &quot;.+\.whl$&quot;</code>命令找到下载好的==whl==文件存放目录<br><img src="/2017/03/25/OpenStack-Installation-Instruction/1490439635024.jpg" alt="whl文件列表" title="whl文件列表"></p>
</li>
<li><p>在<code>upper-requirements.txt:271</code><br><img src="/2017/03/25/OpenStack-Installation-Instruction/1490440666752.jpg" alt="pysaml2 需求" title="pysaml2 需求"><br>需要的版本是4.0.2，文件大小为13.7M，我在pypi上找到的版本是4.4.0版本文件大小为4.3M。由于文件太大，下载容易出错，再来一次就好。或者使用wget 下载好放在<code>/usr/local/lib/python2.7/dist-packages</code>目录中</p>
</li>
<li><p>OpenstackSDK错误</p>
</li>
</ul>
<p>![OpenstackSDK ERROR][12]</p>
<p><img src="/2017/03/25/OpenStack-Installation-Instruction/1490458066888.jpg" alt="requirements/upper-constraints.txt" title="requirements/upper-constraints.txt"><br>修正方法有以下几种：</p>
<ul>
<li>将openstacksdk的版本调至<code>0.9.11</code>或者<code>0.9.12</code></li>
<li>可以将出错模块==session.py==文件中<code>.__version__</code>给去掉</li>
</ul>
<h3 id="安装成功"><a href="#安装成功" class="headerlink" title="安装成功"></a>安装成功</h3><p><img src="/2017/03/25/OpenStack-Installation-Instruction/1490516798724.jpg" alt="主机中网页登陆界面" title="主机中网页登陆界面"></p>
<p><img src="/2017/03/25/OpenStack-Installation-Instruction/1490516826062.jpg" alt="安装完成后命令行提示信息" title="安装完成后命令行提示信息"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[程序运行时间测定]]></title>
      <url>http://harveyhuang.github.io/2016/10/22/%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4%E6%B5%8B%E5%AE%9A/</url>
      <content type="html"><![CDATA[<blockquote>
<p>简介<br>封装了一个简单获取当前时间戳的函数<code>double getCurrentTimestamp()</code>，该函数能够在<strong>Windows</strong>和<strong>Linux</strong>下运行</p>
<p><excerpt in="" index=""><br><a id="more"></a></excerpt></p>
</blockquote>
<p>话不多说，源码如下：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> 	_WIN32</span></div><div class="line">	<span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line">	<span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line">	<span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">getCurrentTimeStamp</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">double</span> current;</div><div class="line">	<span class="meta">#<span class="meta-keyword">ifdef</span> _WIN32</span></div><div class="line">	<span class="keyword">static</span> LARGE_INTEGER fre = &#123;&#125;;</div><div class="line">	LARGE_INTEGER cur_clock;</div><div class="line">	<span class="keyword">if</span>(<span class="number">0</span> == fre.QuadPart)</div><div class="line">		QueryPerformanceFrequency(&amp;fre);</div><div class="line">	QueryPerformanceCounter(&amp;cur_clock);</div><div class="line">	current = (<span class="keyword">double</span>)cur_clock.QuadPart / (<span class="keyword">double</span>)fre.QuadPart;</div><div class="line">	<span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line">		<span class="keyword">struct</span> timespec ts;</div><div class="line">		clock_gettime(CLOCK_MONOTONIC, &amp;ts);</div><div class="line">		current = (<span class="keyword">double</span>)ts.tv_nsec * <span class="number">10e-9</span> + (<span class="keyword">double</span>)ts.tv_sec;</div><div class="line">	<span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line">	<span class="keyword">return</span> current;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">double</span> start, end;</div><div class="line">	start = getCurrentTimeStamp();</div><div class="line">	<span class="keyword">int</span> sum = <span class="number">0</span>, i;</div><div class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10000000</span>; i++)</div><div class="line">	&#123;</div><div class="line">		sum += i;</div><div class="line">	&#125;</div><div class="line">	end = getCurrentTimeStamp();</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"time %f seconds\n"</span>, end - start);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="代码注释"><a href="#代码注释" class="headerlink" title="代码注释"></a>代码注释</h3><h4 id="WIN32"><a href="#WIN32" class="headerlink" title="_WIN32"></a>_WIN32</h4><p><strong>GCC</strong>编译器自带的编译宏，能够识别判别代码是否在<strong>Windows</strong>下编译。<br>查看自带编译宏的指令<code>gcc -posix -E -dM - &lt;/dev/null</code></p>
<h4 id="QueryPerformanceCounter"><a href="#QueryPerformanceCounter" class="headerlink" title="QueryPerformanceCounter()"></a><code>QueryPerformanceCounter()</code></h4><p>精确的时间计时，有时候是非常必要的。比如播放多媒体时视频与音频的时间同步，还有在测试代码的性能时，也需要使用到非常精确的时间计时。还有测试硬件的性能时，也需要精确的时间计时。这时就需要使用QueryPerformanceCounter来查询定时器的计数值，如果硬件里有定时器，它就会启动这个定时器，并且不断获取定时器的值，这样的定时器精度，就跟硬件时钟的晶振一样精确的。<br><code>QueryPerformanceCounter</code>   查询性能计数器 </p>
<blockquote>
<p>The QueryPerformanceCounter function retrieves the current value of<br>the high-resolution performance counter, if one exists.<br>此函数用于获取精确的性能计数器数值,如果存在.</p>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">BOOL QueryPerformanceCounter(</div><div class="line">    LARGE_INTEGER *lpPerformanceCount  // address of current counter value   当前计数器值的地址 </div><div class="line">   );</div></pre></td></tr></table></figure>
<p>//Parameters lpPerformanceCount<br>Points to a variable that the function sets, in counts, to the current performance-counter value. If the installed hardware does not support a high-resolution performance counter, this parameter can be to zero.<br>指针,指向函数设置的一个变量(一般是个引用,译者注), 用来返回性能计数器的值.如果已安装的硬件不支持高精度性能计数器,此参数可以为0(那调用有什么意义,用来查询?).</p>
<p>Return Values<br>If the installed hardware supports a high-resolution performance counter, the return value is nonzero.</p>
<p>不支持，返回非0，否则返回0<br>If the installed hardware does not support a high-resolution performance counter, the return value is zero.<br>函数通常和<code>QueryPerformanceFrequency</code>配合使用，换算出秒数</p>
<h4 id="clock-gettime"><a href="#clock-gettime" class="headerlink" title="clock_gettime()"></a><code>clock_gettime()</code></h4><blockquote>
<p>函数”clock_gettime”是基于Linux C语言的时间函数,他可以用于计算精度和纳秒</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">clock_gettime</span><span class="params">(<span class="keyword">clockid_t</span> clk_id,<span class="keyword">struct</span> timespec *tp)</span></span>;</div><div class="line"></div><div class="line"><span class="comment">/*参数</span></div><div class="line">clk_id : 检索和设置的clk_id指定的时钟时间。</div><div class="line">CLOCK_REALTIME:系统实时时间,随系统实时时间改变而改变,即从UTC1970-1-1 0:0:0开始计时,</div><div class="line">中间时刻如果系统时间被用户改成其他,则对应的时间相应改变</div><div class="line">　　CLOCK_MONOTONIC :从系统启动这一刻起开始计时,不受系统时间被用户改变的影响</div><div class="line">　　CLOCK_PROCESS_CPUTIME_ID:本进程到当前代码系统CPU花费的时间</div><div class="line">　　CLOCK_THREAD_CPUTIME_ID:本线程到当前代码系统CPU花费的时间*/</div><div class="line"><span class="keyword">struct</span> timespec</div><div class="line">&#123;</div><div class="line"><span class="keyword">time_t</span> tv_sec; <span class="comment">/* 秒*/</span></div><div class="line"><span class="keyword">long</span> tv_nsec; <span class="comment">/* 纳秒*/</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux服务器常用配置方法]]></title>
      <url>http://harveyhuang.github.io/2016/10/15/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<blockquote>
<p>常用的Linux环境配置，使变成更有效率</p>
</blockquote>
<p><excerpt in="" index=""><br><a id="more"></a></excerpt></p>
<h3 id="利用Samba实现服务器和windows下文件共享"><a href="#利用Samba实现服务器和windows下文件共享" class="headerlink" title="利用Samba实现服务器和windows下文件共享"></a>利用<strong>Samba</strong>实现服务器和windows下文件共享</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 1. 安装samba</span></div><div class="line">sudo apt-get install samba</div><div class="line"></div><div class="line"><span class="comment"># 2. 添加系统用户</span></div><div class="line">sudo adduser </div><div class="line"></div><div class="line"><span class="comment"># 3. 添加系统用户目录（如果使用adduser 这步可以省掉）</span></div><div class="line"><span class="built_in">cd</span> /home</div><div class="line">mkdir username</div><div class="line">chown -R username</div><div class="line"></div><div class="line"><span class="comment"># 4. 添加samba用户</span></div><div class="line">sudo smbpasswd <span class="_">-a</span> username</div><div class="line"></div><div class="line"><span class="comment"># 5. 配置samba</span></div><div class="line">vi /etc/samba/smb.conf</div><div class="line">[username]</div><div class="line">   comment = shared dir with username</div><div class="line">   path = /home/username</div><div class="line">   browseable = yes</div><div class="line">   writable = yes</div><div class="line">   <span class="built_in">read</span> only = no</div><div class="line">   guest ok = no</div><div class="line"></div><div class="line"><span class="comment"># 6. 重启samba</span></div><div class="line">/etc/init.d/samba restart</div></pre></td></tr></table></figure>
<h3 id="修改Linux主机名"><a href="#修改Linux主机名" class="headerlink" title="修改Linux主机名"></a>修改Linux主机名</h3><ul>
<li>暂时修改，下次会话生效</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 方法一</span></div><div class="line">    hostname newhostname</div><div class="line"><span class="comment"># 方法二</span></div><div class="line">	sysctl kernel.hostname</div></pre></td></tr></table></figure>
<ul>
<li>永久性修改</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vi /etc/hostname</div><div class="line"><span class="comment"># 如果没有上面的目录的话</span></div><div class="line">vi /etc/sysconfig/hostname</div></pre></td></tr></table></figure>
<h3 id="用户相关"><a href="#用户相关" class="headerlink" title="用户相关"></a>用户相关</h3><p><strong>usermod 选项</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">-a|--append  ##把用户追加到某些组中，仅与-G选项一起使用 </div><div class="line">-c|--comment ##修改/etc/passwd文件第五段comment </div><div class="line">-d|--home    ##修改用户的家目录通常和-m选项一起使用 </div><div class="line">-e|--expiredate  ##指定用户帐号禁用的日期，格式YY-MM-DD </div><div class="line">-f|--inactive    ##用户密码过期多少天后采用就禁用该帐号，0表示密码已过期就禁用帐号，-1表示禁用此功能，默认值是-1 </div><div class="line">-g|--gid     ##修改用户的gid，改组一定存在</div><div class="line">-G|--groups  ##把用户追加到某些组中，仅与-a选项一起使用 </div><div class="line">-l|--login   ##修改用户的登录名称 </div><div class="line">-L|--lock    ##锁定用户的密码 </div><div class="line">-m|--move-home   ##修改用户的家目录通常和-d选项一起使用 </div><div class="line">-s|--shell   ##修改用户的shell </div><div class="line">-u|--uid     ##修改用户的uid，该uid必须唯一 </div><div class="line">-U|--unlock  ##解锁用户的密码</div></pre></td></tr></table></figure></p>
<ul>
<li>新建用户test，密码test，添加用户组usertest</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># adduser test</div><div class="line"># 根据提示输入密码等信息</div><div class="line"># groupadd usertest</div></pre></td></tr></table></figure>
<ul>
<li>将test用户添加到usertest用户组</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#usermod -aG usertest test ##多个组之间用空格隔开 </div><div class="line">#id test </div><div class="line">uid=500(test) gid=500(test) groups=500(test),501(usertest)</div></pre></td></tr></table></figure>
<ul>
<li>修改test用户<strong>Home</strong>目录</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#usermod -md /home/usertest </div><div class="line">#ls /home </div><div class="line">usertest</div></pre></td></tr></table></figure>
<ul>
<li>修改用户名</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#usermod -l urchin(新用户名称)  test(原来用户名称) </div><div class="line">#id urchin </div><div class="line">uid=500(urchin) gid=500(test) groups=500(test),501(usertest)</div></pre></td></tr></table></figure>
<ul>
<li>修改用户shell</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#sed &apos;$!d&apos; /etc/passwd </div><div class="line">urchin:x:500:500::/home/usertest:/bin/bash </div><div class="line">#usermod -s /bin/sh urchin </div><div class="line">#sed -n &apos;$p&apos; /etc/passwd </div><div class="line">urchin:x:500:500::/home/usertest:/bin/sh (当然bash更好用)</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo + Github 搭建个人博客]]></title>
      <url>http://harveyhuang.github.io/2016/08/28/Hexo%20+%20Github%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<blockquote>
<p>看见网上的大神们在<code>github</code>上搭建自己的博客，便也手痒了，也想搭一个，本文记载了搭建博客的整个过程</p>
</blockquote>
<p><excerpt in="" index=""><br><a id="more"></a></excerpt></p>
<h3 id="申请git账号"><a href="#申请git账号" class="headerlink" title="申请git账号"></a>申请git账号</h3><h3 id="新建一个和自己用户名一样的repository"><a href="#新建一个和自己用户名一样的repository" class="headerlink" title="新建一个和自己用户名一样的repository"></a>新建一个和自己用户名一样的<strong>repository</strong></h3><p>For example，我的github的用户名时HarveyHub，所以我建的repository名为 HarveyHub.github.io</p>
<h3 id="本地安装git"><a href="#本地安装git" class="headerlink" title="本地安装git"></a>本地安装git</h3><h3 id="添加SSHkey"><a href="#添加SSHkey" class="headerlink" title="添加SSHkey"></a>添加SSHkey</h3><ul>
<li>参考<a href="https://harveyhub.github.io/2016/08/28/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" target="_blank" rel="external">git学习笔记</a>中环境配置，添加SSH key<h3 id="下载安装nodejs-nodejs中文官网"><a href="#下载安装nodejs-nodejs中文官网" class="headerlink" title="下载安装nodejs nodejs中文官网"></a>下载安装nodejs <a href="http://nodejs.cn/" target="_blank" rel="external">nodejs中文官网</a></h3></li>
</ul>
<h3 id="下载安装Hexo"><a href="#下载安装Hexo" class="headerlink" title="下载安装Hexo"></a>下载安装Hexo</h3><ul>
<li>安装好nodejs之后，可以使用<code>npm install hexo-cli -g</code>名利安装Hexo<h3 id="开始搭建一个hello-world博客"><a href="#开始搭建一个hello-world博客" class="headerlink" title="开始搭建一个hello world博客"></a>开始搭建一个<code>hello world</code>博客</h3></li>
</ul>
<ol>
<li>新建blog文件夹</li>
<li><code>hexo init blog</code></li>
<li><code>npm install</code></li>
<li><code>hexo generate</code>也可以简写为<code>hexo g</code></li>
<li><code>hexo server</code>启动本地服务器，进入<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 预览</li>
<li><p>修改blog目录下的配置文件<code>_config.yml</code></p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: https://github.com/HarveyHub/HarveyHub.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li>执行命令<code>npm install hexo-deployer-git --save</code></li>
<li>这时使用<code>hexo deploy</code>命令发布网站之后，就会在 harveyhub.github.io访问到helloworld博客。</li>
</ol>
<h3 id="写一篇自己的博文并发布"><a href="#写一篇自己的博文并发布" class="headerlink" title="写一篇自己的博文并发布"></a>写一篇自己的博文并发布</h3><ol>
<li><code>hexo new &quot;postName&quot;</code> #新建文章，在<strong>source/_post/</strong>中生成<code>postName.md</code>文件</li>
<li><code>hexo new &quot;pageName&quot;</code> #新建页面</li>
<li><code>hexo generate</code> #生成静态页面到public目录</li>
<li><code>hexo server</code> #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）</li>
<li><code>hexo deploy</code> #发布博文，将github作为静态网站的服务器</li>
<li><code>hexo help</code> #查看帮助</li>
<li><code>hexo version</code> #查看hexo版本<h3 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h3><a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">Hexo All Themes</a>中有很多主题，<code>git clone</code>到本地blog/themes，把blog根目录中 <code>_config.yml</code> 中<code>theme:</code>对应的值改为主题名，之后一步步按照<strong>readme.md</strong>文件中安装主题</li>
</ol>
<h3 id="博客维护"><a href="#博客维护" class="headerlink" title="博客维护"></a>博客维护</h3><ol>
<li><code>hexo new &quot;postName&quot;/&quot;</code> <code>hexo new page &quot;pageName&quot;</code></li>
<li><code>hexo clean</code>删除public文件夹中已经生成的静态页面，让人不爽的是把图片也删除了。这样markdown文件里面的图片就不能在网页中显示了。</li>
<li><code>hexo generate</code></li>
<li>如果markdown文件中引用了图片，记得把图片放入到public中博文相应的目录，因为<code>git clean</code>之后图片会被删除。</li>
<li><code>hexo deploy</code></li>
</ol>
<h3 id="添加图片"><a href="#添加图片" class="headerlink" title="添加图片"></a>添加图片</h3><ol>
<li>在<code>source</code>文件夹下建一个<code>images</code>文件夹，把需要放在网上的图片修改好名字放在其中</li>
<li><p>在md文件中包含图片时使用</p>
 <figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![<span class="string">image decription</span>](<span class="link">/imags/image_name.jpg</span>)</div></pre></td></tr></table></figure>
</li>
<li><p>在小书匠编辑器中更改库为<strong>小书匠编辑器存储</strong>，资源引用路径改为<code>images</code>的上级目录，这样既能在小书匠编辑器中预览到图片，也能够将图片发布到网页中，不需要每次把图片考入<code>public</code>中博文相对应的目录中</p>
</li>
</ol>
<h3 id="hexo文章模板"><a href="#hexo文章模板" class="headerlink" title="hexo文章模板"></a>hexo文章模板</h3><ul>
<li><p>模板可按个人需求修改</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">title:  博文名</div><div class="line">date: 时间日期</div><div class="line">categories:</div><div class="line">  - 文章分类名1</div><div class="line">  - 文章分类名2</div><div class="line">tags: </div><div class="line">  - 文章标签1</div><div class="line">  - 文章标签2</div><div class="line">top: 1 #文章置顶</div></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>文章分类、文章标签分类需要主题支持</strong></p>
<h4 id="小书匠新建MD文件模板"><a href="#小书匠新建MD文件模板" class="headerlink" title="小书匠新建MD文件模板"></a>小书匠新建MD文件模板</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title:  New File.md </div><div class="line">date:  &lt;% print((new Date()).toLocaleString()); %&gt;</div><div class="line">categories:</div><div class="line">  - 学习</div><div class="line">tags: </div><div class="line">  - git</div><div class="line">top: 1</div><div class="line">grammar_cjkRuby: true</div><div class="line">---</div><div class="line"></div><div class="line"></div><div class="line">&gt; Abstract</div><div class="line"></div><div class="line">&lt;Excerpt in index&gt; </div><div class="line">&lt;!-- more --&gt;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git学习笔记]]></title>
      <url>http://harveyhuang.github.io/2016/08/28/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<blockquote>
<p>学习<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">廖雪峰git教程</a>的笔记</p>
</blockquote>
<p><excerpt in="" index=""><br><a id="more"></a></excerpt></p>
<h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><ol>
<li>可以从<a href="https://git-scm.com/download" target="_blank" rel="external">git官方下载网站</a>下载对应的git版本，安装过程中一路<strong>next</strong>即可；linux下直接使用命令<code>sudo apt-get install git</code>安装</li>
<li><p>需要配置local信息</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name &quot;Your Name&quot;</div><div class="line">$ git config --global user.email &quot;email@example.com&quot;</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="常用命令及其功能"><a href="#常用命令及其功能" class="headerlink" title="常用命令及其功能"></a>常用命令及其功能</h3><h4 id="本地仓库"><a href="#本地仓库" class="headerlink" title="本地仓库"></a>本地仓库</h4><ol>
<li><code>git init</code>，将当前目录变成<strong>Git</strong>可以管理的仓库</li>
<li><code>git add &quot;existed file/folder</code>，将该文件提交到<strong>stage</strong>，当后面是文件夹时，提交该文件夹下所有内容</li>
<li><code>git commit -m &quot;describe of commition&quot;</code>，将<code>git add</code>提交到<strong>stage</strong>的内容提交到仓库中。</li>
<li><code>git status</code>查看仓库当前状态。</li>
<li><code>git diff &quot;file name&quot;</code>，比较仓库中filename文件和工作区中该文件的区别</li>
<li><code>git log</code>或<code>git log --pretty=online</code>，显示从最近到最远的提交日志</li>
<li><code>gitk</code>可进入图形界面</li>
<li><code>git reset --hard HEAD^</code>，将工作区中的内容回溯到上一次提交之前。<code>HEAD</code>表示当前版本，上一个版本时<code>HEAD^</code>，上上个版本是<code>HEAD^^</code>，往前N个版本就是<code>HEAD~N</code>。<code>git reset --hard</code>之后也可以接版本ID（很长的一串数字）。</li>
<li><code>git reflog</code>用来记录每一次命令，上面有之前提交的版本号，这样方便回溯或切换到之后版本。</li>
<li><code>git checkout -- file</code>，检出file在库中的版本，这会覆盖掉工作区中的file，从而实现的功能是<strong>撤销工作区文件的删改</strong>，<code>git reset HEAD file</code>把<strong>stage中的file撤销掉</strong></li>
<li><p><code>git rm &quot;file&quot;</code>删除仓库中file文件。使用完该命令之后就不能从仓库中<code>git chechout &quot;file&quot;</code>检出该文件了。如果只是本地删除，可以检出恢复。</p>
</li>
<li><p><code>ssh-keygen -t res -C &quot;your email@example.com&quot;</code>，创建SSH Key，一路回车下去，就会发现在用户目录下有<code>.ssh</code>目录，目录中会有<code>id_rsa</code>和<code>id_rsa.pub</code>，这两个是<strong>SSH Key</strong>密钥对，<code>id_rsa</code>是私钥，不能泄露，<code>id_rsa.pub</code>是公钥，可以放心的告诉别人。<br>登陆GitHub，点击右边自己的头像打开<strong>Setting</strong>，左边的列表中会有<strong>SSH and GPG keys</strong>，点击之后在右边会看到<strong>New SSH Key</strong>，填上<strong>Title</strong>，在Key文本框里粘贴<code>id_rsa.pub</code>中的内容。点<strong>Add SSH Key</strong>，就可以看到已经添加的Key。若是希望每次提交的时候不输入密码，需要将push方式改为ssh方式，而不是https方式。可以通过修改当前repository目录下.git/config中的<code>url</code></p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#https方式</div><div class="line">url = https://github/HarveyHub/Python</div><div class="line"># ssh方式</div><div class="line">url = git@github.com:HarveyHub/Python</div></pre></td></tr></table></figure>
<h4 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h4><ol>
<li><p>关联远程仓库和本地仓库，在GitHub创建好空的repository之后，根据提示关联已经有的本地仓库，在本地仓库目录下执行</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git remote add origin https://github.com/your_name/repository_name.git</div><div class="line">git push -u origin master</div></pre></td></tr></table></figure>
<p> 提交本地仓库所有内容，<code>-u</code>表示将本地master分支与远程的origin分支关联起来，在以后的推送和拉取时可以简化命令为<code>git push origin master</code>将本地库的内容推送到远程。<br> <code>git clone https://github.com/your_name/repository_name.git</code>将远程库中内容拷贝到本地，也可以达到关联的目的。<br> <code>git remote -v</code>查看远程库信息<br> <code>git pull</code> 从远程抓取分支，每次提交本地库到远程库之前执行，如有冲突，先处理冲突.</p>
</li>
<li><p>分支相关命令</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">git branch //查看已有分支，当前分支会有*标志</div><div class="line">git branch dev //创建分支</div><div class="line">git checkout dev //切换该分支</div><div class="line">git checkout -b &lt;name&gt; //创建+切换分支</div><div class="line">git merge &lt;name&gt; //将某分支合并到当前分支上</div><div class="line">git branch -d &lt;name&gt; //删除某分支</div><div class="line">   git branch -D &lt;name&gt; //强制删除分支</div><div class="line">   git branch --set-upstream branch-name origin/branch-name</div></pre></td></tr></table></figure>
<p> 分支合并：<br> Git用&lt;&lt;&lt;&lt;&lt;&lt;&lt;，=======，&gt;&gt;&gt;&gt;&gt;&gt;&gt;标记出不同分支的内容，当合并分支出新冲突时，用<code>git status</code>查看具体情况，再手动修改合，排除冲突后进行合并。<br> <code>git log --graph</code>，查看分支合并图<br> <code>--no-ff</code>，合并分支时使用此参数，合并后的历史有分支，可以看出来哪些曾经修改过。<br> <code>git stash</code>，储存当前工作现场，使用<code>git stash list</code>查看存储的工作现场，使用<code>git stash applay</code>恢复（需要使用<code>git stash drop</code>删除stash内容）， 或者使用<code>git stash pop</code>恢复的同时将stash的内容删除</p>
</li>
<li><p>标签操作<br><code>git tag &lt;name&gt;</code>用于新建一个标签，默认为<code>HEAD</code>，也可以指定一个<code>commit id</code>；<br><code>git tag -a &lt;tagname&gt; -m &quot;blablabla...&quot;</code>可以指定标签信息；<br><code>git tag -s &lt;tagname&gt; -m &quot;blablabla...&quot;</code>可以用PGP签名标签；<br><code>git tag</code>可以查看所有标签。<br><code>git push origin &lt;tagname&gt;</code>可以推送一个本地标签；<br><code>git push origin --tags</code>可以推送全部未推送过的本地标签；<br><code>git tag -d &lt;tagname&gt;</code>可以删除一个本地标签；<br><code>git push origin :refs/tags/&lt;tagname&gt;</code>可以删除一个远程标签</p>
</li>
<li><p>其他<br><code>git config --global color.ui true</code>:让Git显示颜色，会让命令输出看起来更醒目<br><strong>.gitignore</strong>忽略特殊文件，用户可以修改指定忽略的文件</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[notepad++配置]]></title>
      <url>http://harveyhuang.github.io/2016/08/27/notepad++%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<p><strong>引言</strong></p>
<blockquote>
<p>相信大家一般都苦于使用什么样的IDE编辑一些比较小的程序，VS太过于庞大，不适合新手理解<code>CC</code>程序怎么从源码到可执行程序的过程，并且VS编译出来的项目只有对方安装了VS才能使用。今天记录一下如何在<strong>notepad++</strong>上编辑执行<code>CC</code> <code>Python</code> <code>Java</code>代码。</p>
</blockquote>
<p><excerpt in="" index=""><br><a id="more"></a>     </excerpt></p>
<h3 id="前期工作"><a href="#前期工作" class="headerlink" title="前期工作"></a>前期工作</h3><ol>
<li><p>安装好Python环境，在安装时勾选<strong>Add python.exe to Path</strong><br> 这样做的好处是，不需要另外为python添加环境变量</p>
</li>
<li><p>安装好<strong>MinGW</strong>，即windows环境下的<code>GCC</code>。这个可以从<strong>Code-Block</strong>或者<strong>Dev-Cpp</strong>中抽取，毕竟从官网中下载太过麻烦。</p>
</li>
<li>安装好<code>JDK</code>和<code>JRE</code>（如果你想使用notepad++编辑<code>java</code>程序），并为之配置环境变量</li>
<li>在notepad++中安装<strong>NppExec</strong>插件，在插件管理器中能够找到。</li>
</ol>
<h3 id="添加执行脚本"><a href="#添加执行脚本" class="headerlink" title="添加执行脚本"></a>添加执行脚本</h3><ul>
<li>安装完<strong>NppExec</strong> 之后，点击 ==F6== 键便可键入脚本，输入下面的脚本之后保存。                     </li>
</ul>
<ol>
<li><p><code>CC</code>执行脚本</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">npp_save</div><div class="line">cd $(CURRENT_DIRECTORY)</div><div class="line">echo ======start to compile========</div><div class="line">g++ -g -Wall  -std=c++11 &quot;$(FILE_NAME)&quot; -o &quot;$(NAME_PART)&quot;</div><div class="line">echo ======start to execute=======</div><div class="line">&quot;$(NAME_PART)&quot;</div></pre></td></tr></table></figure>
<p> 名字保存为<code>g++</code>，当然如果平时编辑<code>gcc</code>比较多的话，按照上面的例子修改即可。<code>g++</code>的编译选项实现了<strong>测试</strong>，<strong>显示所有警告</strong>，<strong>使用C++11标准</strong>，这里可以按需修改。</p>
</li>
<li><p><code>Python</code>执行脚本</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"> npp_save</div><div class="line">cd $(CURRENT_DIRECTORY)</div><div class="line">echo ======start to execute=======</div><div class="line">python &quot;$(FILE_NAME)&quot;</div></pre></td></tr></table></figure>
<p> 名字保存为<code>python</code>。</p>
</li>
<li><p><code>JAVA</code>执行脚本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">npp_save</div><div class="line">cd $(CURRENT_DIRECTORY)</div><div class="line">echo ======start to compile========</div><div class="line">javac &quot;$(FILE_NAME)&quot;</div><div class="line">echo ======start to execute=======</div><div class="line">java &quot;$(NAME_PART)&quot;</div></pre></td></tr></table></figure>
<p>名字保存为<code>java</code></p>
</li>
</ol>
<h3 id="为执行脚本添加快捷键"><a href="#为执行脚本添加快捷键" class="headerlink" title="为执行脚本添加快捷键"></a>为执行脚本添加快捷键</h3><pre><code>添加快捷键的方法自行百度。
</code></pre>]]></content>
    </entry>
    
  
  
</search>
